MEMORY {
# bootcode -- (optionally) autostart the loader:
    BOOTCODE:   file = "%O_boot", start = $02ba, size = $0d00-$086f;

# bootloader -- chainload kickstart:
    LOADER:     file = "%O_loader", start = $086f, size = $0d00-$086f;

# drive ram for drive code uploaded by the bootloader:
    DRVRAM1:    file = "%O_loader", start = $0500,  size = $0300;

# kickstart -- lowest-level functions:
    KICKSTART:  file = "%O_kickstart", start = $c000, size = $1000;

# drive ram for drive code uploaded by kickstart:
    DRVRAM2:    file = "%O_kickstart", start = $0500,  size = $0300;

# amigados -- common functions, window drawing, text output, font ...:
    ADMAIN:     file = "%O_amigados", start = $e000 - 2, size = 2;
    AMIGADOS:   file = "%O_amigados", start = $e000, size = $1ffe;

# placeholder for executable started from amigados:
    ADEXE:      file = "", start = $6000, size = $2000;

# the music demo:
    MUMAIN:     file = "%O_music", start = $6000 - 2, size = 2;
    MUSIC:      file = "%O_music", start = $6000, size = $2000;
}


SEGMENTS {
    BOOTCODE:   load = BOOTCODE;

    LOADER:     load = LOADER;
    DRVCODE1:   load = LOADER, run = DRVRAM1, define = yes;
    LDDATA:     load = LOADER, optional = yes;
    LDBSS:      load = LOADER, type=bss, optional=yes;

    KSENTRY:    load = KICKSTART, define = yes;
    KICKSTART:  load = KICKSTART;
    DRVCODE2:   load = KICKSTART, run = DRVRAM2, define = yes;
    KSDATA:     load = KICKSTART, optional = yes;
    KSBSS:      load = KICKSTART, type=bss, optional=yes;

    ADMAIN:     load = ADMAIN;
    AMIGADOS:   load = AMIGADOS, define = yes;
    ADDATA:     load = AMIGADOS, optional = yes;
    ADBSS:      load = AMIGADOS, type=bss, optional = yes;
    ADEXE:      load = ADEXE, type=bss, define=yes;

    MUMAIN:     load = MUMAIN;
    LPAR64:     load = MUSIC, start = $6000;
    MUSIC:      load = MUSIC;
    MUDATA:     load = MUSIC, optional = yes;
    MUBSS:      load = MUSIC, type=bss, optional = yes;
}

# vim: et:si:ts=8:sts=4:sw=4
